version: "3"

services:
  postgres:
    build:
      context: .
      dockerfile: postgres.dockerfile
    image: "postgres-luxonis:latest"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} 
      PGDATA: ${PGDATA}
      POSTGRES_TABLE: ${POSTGRES_TABLE}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - vol_db_reality:/data/postgres
      - ./postgres-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks: 
      - luxonis_net
    restart: unless-stopped

  scrapy:
    build:
      context: .
      dockerfile: scrapy.dockerfile
    image: "scrapy-luxonis:latest"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      PGDATA: ${PGDATA}
      POSTGRES_TABLE: ${POSTGRES_TABLE}
      SCRAPE_LIMIT: ${SCRAPE_LIMIT}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./scrapy_project:/scrapy_project
    networks:
      - luxonis_net

  app:
    build:
      context: .
      dockerfile: app.dockerfile
    image: "app-luxonis:latest"
    environment:
      FLASK_APP: ${FLASK_APP}
      FLASK_ENV: ${FLASK_ENV}
      FLASK_RUN_HOST: 0.0.0.0
      FLASK_RUN_PORT: 8080    
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_TABLE: ${POSTGRES_TABLE}
    volumes:
      - ./app:/app
    depends_on:
      postgres:
        condition: service_healthy
      scrapy:
        condition: service_completed_successfully
    ports:
      - "8080:8080"
    networks:
      - luxonis_net
    restart: unless-stopped
      
volumes:
  vol_db_reality:

networks:
  luxonis_net:
    driver: bridge